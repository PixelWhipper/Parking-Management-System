#ifndef LOGINDIALOG_H
#define LOGINDIALOG_H

#include <QDialog> // Include the base class for dialogs
#include <QString>   // For handling text strings

// Forward declaration of the Ui::LoginDialog class
// This is generated by Qt's uic from your login.ui file.
namespace Ui {
class LoginDialog;
}

class LoginDialog : public QDialog // Your LoginDialog class inherits from QDialog
{
    Q_OBJECT // This macro is essential for Qt's signal/slot mechanism and properties

public:
    // Constructor: Takes an optional parent widget.
    // 'explicit' prevents unintended implicit conversions.
    explicit LoginDialog(QWidget *parent = nullptr);

    // Destructor: Cleans up resources, particularly the dynamically allocated UI object.
    ~LoginDialog();

    // You might add a method to get the entered username if needed outside the dialog
    // QString getUsername() const; // Example

private slots:
    // This slot will be connected to the 'clicked()' signal of the 'loginButton'
    // in your login.ui. The 'on_objectName_signalName()' naming convention
    // allows Qt's auto-connect feature to work if enabled.
    void on_loginButton_clicked();

    // This slot will be connected to the 'linkActivated()' signal of the 'forgotPasswordLabel'.
    void on_forgotPasswordLabel_linkActivated(const QString &link);

    // This slot will be connected to the 'linkActivated()' signal of the 'signUpLabel'.
    void on_signUpLabel_linkActivated(const QString &link);

private:
    // A pointer to an instance of the generated UI class (from ui_login.h).
    // This provides access to all the widgets designed in login.ui.
    Ui::LoginDialog *ui;

    // You could add a private member for authentication service or credentials here
    // For simplicity, we'll use hardcoded values in the .cpp for now.
};

#endif // LOGINDIALOG_H
